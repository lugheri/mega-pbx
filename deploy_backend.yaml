#Namespace
kind: Namespace
apiVersion: v1
metadata:
  name: megadev-v1
---
#Autorization
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: voip-manager
  namespace: megadev-v1
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods","endpoints","services","nodes"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "watch", "list", "update", "patch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: manager
  namespace: megadev-v1
subjects:
  - kind: User
    name: system:serviceaccount:megadev-v1:default
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: voip-manager
  apiGroup: rbac.authorization.k8s.io
---
#Backend

#Backend Service
apiVersion: v1
kind: Service
metadata:
  name: api-svc
  namespace: megadev-v1
  labels: 
    tier: backend
spec: 
  selector:
    app: central-v1
    tier: backend
  ports:
  - protocol: TCP
    port: 3000
  type: ClusterIP
---
#Deploy do Backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deploy
  namespace: megadev-v1
  labels:
    tier: backend
spec:
  selector:
    matchLabels:
      app: central-v1
      tier: backend
  template:
    metadata:
      labels:
        app: central-v1
        tier: backend
    spec:
      containers:
      - name: api
        image: lugheri/api-central:v135
        env:
        - name: TZ
          value: America/Sao_Paulo

---
#Mysql
#Mysql service
kind: Service
apiVersion: v1
metadata: 
  name: mysql
  namespace: megadev-v1
  labels:
    app: central-v1
spec:
  type: LoadBalancer
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
  selector: 
    app: central-v1
    tier: mysql
---
#Disco Mysql 
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-pvclaim
  namespace: megadev-v1
  labels:
    app: central-v1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
#Deploy Mysql 
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mysql
  namespace: megadev-v1
  labels:
    app: central-v1
spec:
  selector:
    matchLabels:
      app: central-v1
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: central-v1
        tier: mysql
    spec:
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvclaim
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: 1234abc@
        - name: TZ
          value: America/Sao_Paulo
        livenessProbe:
          tcpSocket:
            port: 3306
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
---
#Asterisk
#Service PJSIP/IAX
#kind: Service
#apiVersion: v1
#metadata:
#    name: asterisk-sip
#    namespace: megadev-v1
#    #annotations:
#    #  service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
#    labels:
#        app: central
#spec:
#    ports:
#      - name: sip0
#        protocol: UDP
#        port: 5060       
#        targetPort: 5060 
#      - name: rtp0
#        protocol: UDP
#        port: 10000
#      - name: rtp1
#        protocol: UDP
#        port: 10001
#      - name: rtp2
#        protocol: UDP
#        port: 10002
#      - name: rtp3
#        protocol: UDP
#        port: 10003
#      - name: rtp4
#        protocol: UDP
#        port: 10004                 
#    selector:
#        app: central
#        tier: asterisk
#    type: LoadBalancer
#---
kind: Service
apiVersion: v1
metadata:
    name: asterisk-pjsip
    namespace: megadev-v1
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
        app: central
spec:
    ports:         
      - name: pjsip
        protocol: UDP
        port: 65060      
        targetPort: 5060  
      - name: rtp0
        protocol: UDP
        port: 10000
      - name: rtp1
        protocol: UDP
        port: 10001
      - name: rtp2
        protocol: UDP
        port: 10002
      - name: rtp3
        protocol: UDP
        port: 10003
      - name: rtp4
        protocol: UDP
        port: 10004      
    selector:
        app: central
        tier: asterisk
    type: LoadBalancer
---  
#Service PJSIP/IAX
kind: Service
apiVersion: v1
metadata:
    name: asterisk-iax
    namespace: megadev-v1
    labels:
        app: central
spec:
    ports:      
      - name: iax
        protocol: UDP
        port: 64569
        targetPort: 4569      
    selector:
        app: central
        tier: asterisk
    type: ClusterIP
---
#SERVICE HTTP
kind: Service
apiVersion: v1
metadata:
    name: asterisk-http
    namespace: megadev-v1
    labels:
        app: central
spec:
    ports:
      - name: http
        protocol: TCP
        port: 8088
        targetPort: 8088
      #
      #- name: manager
      #  protocol: TCP
      #  port: 5038
      #  targetPort: 5038  
    selector:
        app: central
        tier: asterisk
    type: ClusterIP
---
#SERVICE HTTPS
kind: Service
apiVersion: v1
metadata:
    name: asterisk-https
    namespace: megadev-v1
    labels:
        app: central
spec:
    ports:     
      - name: https
        protocol: TCP
        port: 8089
        targetPort: 8089      
    selector:
        app: central
        tier: asterisk
    type: ClusterIP
---
#DISK RECORDS
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: records-pv-claim
    namespace: megadev-v1
    labels:
        app: central
spec:
    accessModes:
      - ReadWriteOnce
    resources:
        requests:
            storage: 5Gi
---
#DEPLOY
kind: Deployment
apiVersion: apps/v1
metadata:
    name: asterisk
    namespace: megadev-v1
    labels:
        app: central
spec:
    selector:
        matchLabels:
            app: central
            tier: asterisk
    template:
        metadata:
            labels:
                app: central
                tier: asterisk
        spec:
            volumes:
              #Teste com ssl
              #- name: asterisk-pem
              #  emptyDir: {}
              - name: asterisk-tls
                secret:
                  secretName: mega-pbx-tls
                  items:
                    - key: tls.key
                      path: asterisk.key
                    - key: tls.crt
                      path: asterisk.crt
              #- name: confs
              #  persistentVolumeClaim:
              #      claimName: asterisk-pv-claim
              - name: records
                persistentVolumeClaim:
                    claimName: records-pv-claim
            containers:              
              - name: asterisk
                #image: lugheri/mega_asterisk:v0.0.14
                image: lugheri/asterisk-test:native-opus11
                env:
                 - name: CLOUD
                   value: gcp
                volumeMounts:
                  #Teste com ssl
                  #- name: asterisk-pem
                  #  mountPath: /etc/asterisk/keys/pem
                  - name: asterisk-tls
                    mountPath: /etc/asterisk/keys                   
                  #- name: confs
                  #  mountPath: /etc/asterisk
                  - name: records
                    mountPath: /var/spool/asterisk/monitor  
                ports:
                  - containerPort: 10000
                    protocol: UDP
                  - containerPort: 10001
                    protocol: UDP
                  - containerPort: 10002
                    protocol: UDP
                  - containerPort: 10003
                    protocol: UDP
                  - containerPort: 10004
                    protocol: UDP
                  - containerPort: 5060
                    protocol: UDP
                  - containerPort: 4220
                    protocol: UDP
                  - containerPort: 4569
                    protocol: UDP
                  - containerPort: 8088
                    protocol: TCP
                  - containerPort: 8089
                    protocol: TCP
                  - containerPort: 5038
                    protocol: TCP     
                #Criacao de arquivo .pem
                #lifecycle:
                #    postStart:
                #        exec:
                #            command: ["/bin/sh", "-c", "cat /etc/asterisk/keys/asterisk.key /etc/asterisk/keys/asterisk.crt > /etc/asterisk/keys/pem/asterisk.pem"]
---

#Frontend
#Front End Deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deploy
  namespace: megadev-v1
  labels:
    tier: frontend
spec:
  selector:
    matchLabels:
      app: central-v1
      tier: frontend
  template:
    metadata:
      labels:
        app: central-v1
        tier: frontend
    spec:
      containers:
      - name: api
        image: mega10/frontendcentral:v44
        env:
        - name: TZ
          value: America/Sao_Paulo
---
#front service
kind: Service
apiVersion: v1
metadata: 
  name: front-srv
  namespace: megadev-v1
  labels:
    app: central-v1
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
  selector: 
    app: central-v1
    tier: frontend

#Certificados 
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
    name: letsencrypt-prod
    namespace: megadev-v1
spec:
    acme:
      server: https://acme-v02.api.letsencrypt.org/directory
      email: glaucolugh@gmail.com
      privateKeySecretRef:
          name: letsencrypt-prod
      solvers:
      - selector: {}
        http01:
          ingress:
            class: nginx        
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: ingress
    namespace: megadev-v1
    annotations:
        kubernetes.io/ingress.class: "nginx"  
        cert-manager.io/issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/proxy-body-size: 512m
        
spec: 
  tls:
  - hosts:
    - mega-pbx.megaconecta.tec.br
    - mega-api.megaconecta.tec.br
    - mega-ari.megaconecta.tec.br
    - mega-sip.megaconecta.tec.br
    - mega-wss.megaconecta.tec.br
    secretName: mega-pbx-tls
  rules: 
    - host: mega-api.megaconecta.tec.br
      http: 
        paths: 
          - path: /
            backend: 
                serviceName: api-svc
                servicePort: 3000
    - host: mega-pbx.megaconecta.tec.br
      http: 
        paths: 
          - path: /
            backend: 
                serviceName: front-srv
                servicePort: 80
    - host: mega-sip.megaconecta.tec.br
      http: 
        paths: 
          - path: /
            backend: 
              serviceName: asterisk-sip
              servicePort: 5060
    - host: mega-ari.megaconecta.tec.br
      http: 
        paths: 
          - path: /
            backend: 
              serviceName: asterisk-http
              servicePort: 8088  
    - host: mega-wss.megaconecta.tec.br
      http: 
        paths: 
          - path: /
            backend: 
              serviceName: asterisk-https
              servicePort: 8089          
    - host: mega-pbx.megaconecta.tec.br
      http: 
        paths: 
          - path: /
            backend: 
              serviceName: asterisk-http
              servicePort: 5038 
